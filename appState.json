{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "fdce9ee7-c75f-4415-a46e-83ced3ed3541": {
        "id": "fdce9ee7-c75f-4415-a46e-83ced3ed3541",
        "parent": null,
        "name": "indunil",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "080960ca-f278-4b62-9f1a-ed982a752daf"
        ],
        "isRemovable": false,
        "filePath": "indunil"
      },
      "080960ca-f278-4b62-9f1a-ed982a752daf": {
        "id": "080960ca-f278-4b62-9f1a-ed982a752daf",
        "parent": "fdce9ee7-c75f-4415-a46e-83ced3ed3541",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunil/lambda.js",
        "code": "let AWS = require('aws-sdk');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst sqs = new SL_AWS.SQS(AWS);\n\nexports.handler = function (event, context, callback) {\n\n    sqs.receiveMessage({\n        QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/run`,\n        AttributeNames: ['All'],\n        MaxNumberOfMessages: '10',\n        VisibilityTimeout: '15',\n        WaitTimeSeconds: '0',\n        MessageAttributeNames: ['a', 's', 'd']\n    }).promise()\n        .then(receivedMsgData => {\n            if (!!(receivedMsgData) && !!(receivedMsgData.Messages)) {\n                let receivedMessages = receivedMsgData.Messages;\n                receivedMessages.forEach(message => {\n                    console.log(\"Success message\");\n                 console.log( message );\n                    // your logic to access each message through out the loop. Each message is available under variable message \n                    // within this block\n                });\n            } else {\n                console.log(\"no msgesss\");\n                // console.log( data );\n                // No messages to process\n            }\n        })\n        .catch(err => {\n            console.log(\"not Success\");\n                 console.log( err );\n            // error handling goes here\n        });\n\n\n\n\n\n    callback(null, { \"message\": \"Successfully executed\" });\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1Londonindunilqatstany",
            "config": {}
          },
          {
            "resourceName": "sqssach",
            "config": {
              "BatchSize": "10"
            }
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 30,
          "memory": 128,
          "layers": []
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "fdce9ee7-c75f-4415-a46e-83ced3ed3541",
    "openFiles": [
      "080960ca-f278-4b62-9f1a-ed982a752daf"
    ],
    "currentFileId": "080960ca-f278-4b62-9f1a-ed982a752daf",
    "resources": {
      "apigusEast1Londonindunilqatstany": {
        "name": "apigusEast1Londonindunilqatstany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "London",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "indunil/qa/tst",
          "resourcePath": "/indunil/qa/tst",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "sqssach": {
        "name": "sqssach",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": false,
          "name": "sach",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/sach",
          "selectedRegion": "us-east-1",
          "deliveryDelay": 0,
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": false,
          "useSSE": false,
          "kmsCustomerMasterKey": "default",
          "accountId": "318300609668",
          "dataKeyReusePeriod": 5,
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": 30,
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": 4,
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": 0,
          "deadLetterQueueName": "",
          "contentBasedDeduplication": false
        }
      },
      "sqsrun": {
        "name": "sqsrun",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": false,
          "name": "run",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/run",
          "selectedRegion": "us-east-1",
          "deliveryDelay": "10",
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": true,
          "useSSE": true,
          "kmsCustomerMasterKey": "existing",
          "accountId": "318300609668",
          "dataKeyReusePeriod": 5,
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": "100",
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": "5",
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": "400",
          "receiveMessageWaitTime": "10",
          "deadLetterQueueName": "8",
          "maximumReceives": "5",
          "contentBasedDeduplication": false
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "indunil",
    "projectDescription": "kk",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1562763061274
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "indunil",
      "url": "https://github.com/Indunil1992/indunil"
    }
  }
}